package ${package}.controller;

import java.util.Arrays;
import java.util.Map;
import com.baomidou.mybatisplus.mapper.EntityWrapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import com.baomidou.mybatisplus.plugins.Page;

import ${package}.entity.${className};
import ${package}.service.${className}Service;


/**
 * ${comments}
 *
 * @author ${author}
 * ${datetime}
 */
@RestController
@RequestMapping("/${pathName}")
public class ${className}Controller {
    @Autowired
    private ${className}Service ${classname}Service;


    /**
    *  get list
    * @param params
    * @return
    */
    @GetMapping("/page")
    public Page page(@RequestParam Map<String, Object> params) {
      return  ${classname}Service.selectPage(new Query<>(params), new EntityWrapper<>());
    }


    /**
     * get single info
     * @param ${pk.lowerAttrName}
     * @return R
     */
    @GetMapping("/{${pk.lowerAttrName}}")
    public R info(@PathVariable("${pk.lowerAttrName}") ${pk.attrType} ${pk.lowerAttrName}){
			${className} ${classname} = ${classname}Service.selectById(${pk.lowerAttrName});
			return new R<>(${classname});
    }

    /**
     * save
     * @param ${classname}
     * @return R
     */
    @PostMapping("/save")
    public R save(@RequestBody ${className} ${classname}){
			${classname}Service.insert(${classname});
			return new R<>(Boolean.TRUE);
    }

    /**
     * update
     * @param ${classname}
     * @return R
     */
    @PutMapping("/update")
    public R update(@RequestBody ${className} ${classname}){
			${classname}Service.updateById(${classname});
      return new R<>(Boolean.TRUE);
    }

    /**
     * delete
     * @param ${pk.lowerAttrName}s
     * @return R
     */
    @DeleteMapping("/delete")
    public R delete(@RequestBody ${pk.attrType}[] ${pk.lowerAttrName}s){
			${classname}Service.deleteBatchIds(Arrays.asList(${pk.lowerAttrName}s));
      return new R<>(Boolean.TRUE);
    }

}
